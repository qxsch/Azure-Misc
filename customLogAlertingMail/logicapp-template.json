{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "actiongroup_name": {
            "defaultValue": "myEvHandlerGroup",
            "type": "string"
        },
        "keyvault_name": {
            "defaultValue": "mysecretvault",
            "type": "string"
        },
        "logicapp_name": {
            "defaultValue": "eventProcessor",
            "type": "string"
        },
        "logicapp_connection_keyvault": {
            "defaultValue": "keyvault",
            "type": "string"
        },
        "logicapp_connection_office365": {
            "defaultValue": "office365",
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
              "description": "Location for all resources."
            }
          }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2023-02-01",
            "name": "[parameters('keyvault_name')]",
            "location": "[parameters('location')]",
            "tags": {
                "role": "security"
            },
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "vaultUri": "[concat('https://', parameters('keyvault_name'), '.vault.azure.net/')]",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('keyvault_name'), '/AppInsightsClientId')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "value": ""
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('keyvault_name'), '/AppInsightsClientSecret')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "value": ""
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2023-02-01",
            "name": "[concat(parameters('keyvault_name'), '/AppInsightsClientTenantID')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "value": ""
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[parameters('logicapp_connection_keyvault')]",
            "location": "[parameters('location')]",
            "tags": {
                "role": "notification"
            },
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('logicapp_connection_keyvault')]",
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/keyvault')]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueSet": {
                    "name": "oauthMI",
                    "values": {
                        "vaultName": {
                            "value": "[parameters('keyvault_name')]"
                        }
                    }
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[parameters('logicapp_connection_office365')]",
            "location": "[parameters('location')]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('logicapp_connection_office365')]",
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/office365')]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/', subscription().id, '/resourceGroups/demo1/providers/Microsoft.Web/connections/', parameters('logicapp_connection_office365'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicapp_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('logicapp_connection_keyvault'))]",
                "[resourceId('Microsoft.Web/connections', parameters('logicapp_connection_office365'))]"
            ],
            "tags": {
                "role": "notification"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Create_ContentHTML_Variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ContentHTML",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Is_Log_Analytics_alert": {
                            "actions": {
                                "Create_and_Send_Mail": {
                                    "actions": {
                                        "For_each_table": {
                                            "foreach": "@body('Get_AppInsights_data')?['tables']",
                                            "actions": {
                                                "Append_HTML_table_end": {
                                                    "runAfter": {
                                                        "Foreach_Row": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToStringVariable",
                                                    "inputs": {
                                                        "name": "ContentHTML",
                                                        "value": "</table>"
                                                    }
                                                },
                                                "Append_HTML_table_header_begin": {
                                                    "runAfter": {},
                                                    "type": "AppendToStringVariable",
                                                    "inputs": {
                                                        "name": "ContentHTML",
                                                        "value": "<h2>@{replace(replace(items('For_each_table')?['name'], '>', '&gt;'), '<', '&lt;')}</h2><table><tr>"
                                                    }
                                                },
                                                "Append_HTML_table_header_end": {
                                                    "runAfter": {
                                                        "Foreach_Column": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToStringVariable",
                                                    "inputs": {
                                                        "name": "ContentHTML",
                                                        "value": "</tr>"
                                                    }
                                                },
                                                "Foreach_Column": {
                                                    "foreach": "@items('For_each_table')?['columns']",
                                                    "actions": {
                                                        "Append_HTML_column": {
                                                            "runAfter": {},
                                                            "type": "AppendToStringVariable",
                                                            "inputs": {
                                                                "name": "ContentHTML",
                                                                "value": "<th>@{replace(replace(items('Foreach_Column')?['name'], '>', '&gt;'), '<', '&lt;')}</th>"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Append_HTML_table_header_begin": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "Foreach_Row": {
                                                    "foreach": "@items('For_each_table')?['rows']",
                                                    "actions": {
                                                        "Append_HTML_row_begin": {
                                                            "runAfter": {},
                                                            "type": "AppendToStringVariable",
                                                            "inputs": {
                                                                "name": "ContentHTML",
                                                                "value": "<tr>"
                                                            }
                                                        },
                                                        "Append_HTML_row_end": {
                                                            "runAfter": {
                                                                "Foreach_ColumnRow": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "AppendToStringVariable",
                                                            "inputs": {
                                                                "name": "ContentHTML",
                                                                "value": "</tr>"
                                                            }
                                                        },
                                                        "Foreach_ColumnRow": {
                                                            "foreach": "@items('Foreach_Row')",
                                                            "actions": {
                                                                "Append_HTML_ColumnRow": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToStringVariable",
                                                                    "inputs": {
                                                                        "name": "ContentHTML",
                                                                        "value": "<td>@{replace(replace(string(items('Foreach_ColumnRow')), '>', '&gt;'), '<', '&lt;')}</td>"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Append_HTML_row_begin": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Foreach"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Append_HTML_table_header_end": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {},
                                            "type": "Foreach"
                                        },
                                        "Send_an_email_(V2)": {
                                            "runAfter": {
                                                "For_each_table": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "Body": "<h1>Log Analytics Alert - @{replace(replace(string(triggerBody()?['data']?['essentials']?['alertRule']), '>', '&gt;'), '<', '&lt;')}</h1><p><a href=\"https://portal.azure.com/#view/Microsoft_Azure_Monitoring/AzureMonitoringBrowseBlade/~/alertsV2\">For more info click here</a></p> @{variables('ContentHTML')}",
                                                    "Importance": "Normal",
                                                    "Subject": "Log Analytics Alert - @{triggerBody()?['data']?['essentials']?['alertRule']}",
                                                    "To": "marcoweber@microsoft.com"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v2/Mail"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Fetch_Log_Analytics_Data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Scope"
                                },
                                "Fetch_Log_Analytics_Data": {
                                    "actions": {
                                        "Get_AppInsights_Data": {
                                            "runAfter": {
                                                "Get_Token_for_AppInsights": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "type": "Raw",
                                                    "value": "Bearer @{body('Get_Token_for_AppInsights')?['access_token']}"
                                                },
                                                "method": "GET",
                                                "uri": "@{triggerBody()?['data']?['alertContext']?['condition']?['allOf'][0]?['linkToFilteredSearchResultsAPI']}"
                                            }
                                        },
                                        "Get_Token_for_AppInsights": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "body": "    grant_type=client_credentials\n    &client_id=@{body('Get_ClientID')?['value']}\n    &resource=https://api.applicationinsights.io\n    &client_secret=@{body('Get_ClientSecret')?['value']}",
                                                "headers": {
                                                    "Content-Type": "application/x-www-form-urlencoded"
                                                },
                                                "method": "POST",
                                                "uri": "https://login.microsoftonline.com/@{body('Get_TenantID')?['value']}/oauth2/token"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Load_From_Key_Vault": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Scope"
                                },
                                "Load_From_Key_Vault": {
                                    "actions": {
                                        "Get_ClientID": {
                                            "runAfter": {
                                                "Get_TenantID": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('AppInsightsClientId')}/value"
                                            }
                                        },
                                        "Get_ClientSecret": {
                                            "runAfter": {
                                                "Get_ClientID": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('AppInsightsClientSecret')}/value"
                                            }
                                        },
                                        "Get_TenantID": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('AppInsightsClientTenantID')}/value"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Scope"
                                }
                            },
                            "runAfter": {
                                "Create_ContentHTML_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(triggerBody()?['data']?['alertContext']?['condition']?['allOf'][0]?['linkToFilteredSearchResultsAPI'])",
                                            0
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@triggerBody()?['schemaId']",
                                            "azureMonitorCommonAlertSchema"
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@triggerBody()?['data']?['essentials']?['signalType']",
                                            "Log"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Response": {
                            "runAfter": {
                                "Is_Log_Analytics_alert": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "HTML is:\n\n@{variables('ContentHTML')}\n\n\n\n\n\n",
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicapp_connection_keyvault'))]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/westeurope/managedApis/keyvault')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicapp_connection_office365'))]",
                                "connectionName": "office365",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/westeurope/managedApis/office365')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2023-01-01",
            "name": "[parameters('actiongroup_name')]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('logicapp_name'))]"
            ],
            "tags": {
                "role": "notification"
            },
            "properties": {
                "groupShortName": "myEvHandlerG",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventHubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [
                    {
                        "name": "Process with event handler",
                        "resourceId": "[resourceId('Microsoft.Logic/workflows', parameters('logicapp_name'))]",
                        "callbackUrl": "[listCallbackUrl(concat(resourceId('Microsoft.Logic/workflows', parameters('logicapp_name')), '/triggers/manual'), '2016-06-01').value]",
                        "useCommonAlertSchema": true
                    }
                ],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        }
    ]
}